# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-07-11 05:51
from __future__ import unicode_literals

import accounts.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import hitcount.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
                ('reply', models.BooleanField(default=False, verbose_name='is a reply?')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('likedcmt', models.ManyToManyField(blank=True, related_name='likedcmt', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='videos.CommentModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GenreModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genrename', models.CharField(max_length=100, unique=True)),
                ('is_category', models.BooleanField(default=False, verbose_name='is a category?')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category', to='videos.GenreModel')),
            ],
        ),
        migrations.CreateModel(
            name='PlaylistModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='playlistuser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShareCommentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShareModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(blank=True, max_length=200)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VideoModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thumbnail', models.FileField(default='vidcraftavatar.png', upload_to='thumbnails', validators=[accounts.validators.validate_file_extension])),
                ('video', models.FileField(upload_to='mp4video', validators=[accounts.validators.validate_file_video_extension])),
                ('title', models.CharField(max_length=115)),
                ('description', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='videos.GenreModel')),
                ('liked', models.ManyToManyField(blank=True, related_name='liked', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='videos', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, hitcount.models.HitCountMixin),
        ),
        migrations.AddField(
            model_name='sharemodel',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='videos.VideoModel'),
        ),
        migrations.AddField(
            model_name='sharecommentmodel',
            name='share',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sharecomments', to='videos.ShareModel'),
        ),
        migrations.AddField(
            model_name='sharecommentmodel',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentuser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='playlistmodel',
            name='videos',
            field=models.ManyToManyField(blank=True, related_name='playlistvideos', to='videos.VideoModel'),
        ),
        migrations.AddField(
            model_name='commentmodel',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='videos.VideoModel'),
        ),
    ]
